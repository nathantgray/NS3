name: "CI"

on: [push]
  #schedule:
#  - cron:  '0 5 * * *'  #daily build at 5AM
jobs:

  Ubuntu:

    runs-on: ubuntu-latest

    outputs:
      cache_hit_rate: ${{ steps.ccache_results.outputs.ccache_hit_rate }}
    steps:
      - uses: actions/checkout@v1
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get -y install apt-utils
          sudo apt-get -y install git gcc g++ cmake python make ninja-build
          #sudo apt-get -y install qt5-default
          #sudo apt-get -y install gdb valgrind
          sudo apt-get -y install tcpdump libgsl-dev mpi-default-dev libxml2-dev
          sudo apt-get -y install curl unzip tar
          sudo apt-get -y install ccache
      - name: Get timestamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Restore ccache
        id: ccache
        uses: actions/cache@v1.1.0
        with:
          path: .ccache
          key: ubuntu-ci-temp-${{steps.time.outputs.time}}
          restore-keys: ubuntu-ci-temp-
      - name: Setup ccache
        run: |
          ccache --set-config=cache_dir="$GITHUB_WORKSPACE/.ccache"
          ccache --set-config=max_size=400M
          ccache --set-config=compression=true
          ccache -z
      - name: Configure CMake
        run: |
          mkdir cmake-cache
          cd cmake-cache
          cmake -DCMAKE_BUILD_TYPE=minsizerel -DNS3_EXAMPLES=ON -DNS3_TESTS=ON -G"Ninja"  ..
      - name: Build ns-3
        run: |
          cd cmake-cache
          ninja
      - name: Print ccache statistics
        id: ccache_results
        run: |
          ccache -s
          python3 -c "import re; print('::set-output name=cache_hit_rate::'+re.findall('.* (.*) %', '`ccache -s | grep "cache hit rate"`')[0])"
      - name: Run tests and examples
        if: steps.ccache_results.outputs.cache_hit_rate != '100.00'    
        run: python3 test.py --nowaf

  Windows_Visual_Studio:

    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - name: Configure CMake
        run: |
          %comspec% /k "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
          mkdir cmake-cache
          cd cmake-cache
          cmake -DCMAKE_BUILD_TYPE=release -DNS3_EXAMPLES=ON -DNS3_TESTS=ON -G"Visual Studio 16 2019" -A x64 -T ClangCL ..
      - name: Build ns-3
        continue-on-error: true
        run: |
          %comspec% /k "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
          cd cmake-cache
          cmake --build . --parallel 4
      - name: Run tests and examples
        run: python .\test.py --nowaf


